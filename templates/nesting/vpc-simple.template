{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Simple VPC for CloudFormation template nesting example",
  "Resources": {
    "SimpleVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SimpleVpcExample"
          },
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "SimpleVPC"
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "VpcDhcpOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "Tags": [
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "VpcAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "SimpleVPC"
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "InternetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "SimpleVPC"
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "SimpleVpcSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "The Simple VPC test security group",
        "VpcId": {
          "Ref": "SimpleVPC"
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "simple-vpc-example"
          }
        ]
      }
    },
    "VpcAclEgressRule0": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "VpcAcl"
        }
      }
    },
    "VpcAclIngressRule0": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "false",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "VpcAcl"
        }
      }
    },
    "AclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "VpcAcl"
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        }
      }
    },
    "GatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "SimpleVPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "InternetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "InternetRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        }
      }
    },
    "InternetRouteTableRoute0": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "InternetRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": "GatewayAttachment"
    },
    "SshIngressRule": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SimpleVpcSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egressAllowAllRule": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SimpleVpcSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Outputs": {
    "PublicSubnet": {"Value": { "Ref" : "PublicSubnet"}},
    "SimpleVpcSecurityGroup": {"Value": { "Ref" : "SimpleVpcSecurityGroup"}}
  }
}